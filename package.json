{
  "name": "tstl",
  "description": "TypeScript-STL (Standard Template Library, migrated from C++)",
  "author": {
    "name": "Jeongho Nam",
    "email": "samchon@samchon.org",
    "url": "http://samchon.org"
  },
  "version": "3.0.0-dev.20201116",
  "main": "./index.js",
  "typings": "./index.ts",
  "scripts": {
    "api": "typedoc src --exclude \"**/+(test|benchmark)/**\" --excludeNotDocumented --plugin typedoc-plugin-external-module-name --plugin typedoc-plugin-exclude-references --out ../tstl@gh-pages/api",
    "migration": "ts-node build/migration",
    "benchmark": "node benchmark",
    "build": "npm run compile && npm run test",
    "compile": "tsc",
    "dev": "tsc --watch",
    "test": "node test"
  },
  "dependencies": {
    "@types/node": "^14.14.7"
  },
  "devDependencies": {
    "@types/cli": "^0.11.19",
    "cli": "^1.0.1",
    "source-map-support": "^0.5.19",
    "ts-node": "^9.0.0",
    "typedoc": "^0.19.0",
    "typedoc-plugin-exclude-references": "1.0.0",
    "typedoc-plugin-external-module-name": "^4.0.3",
    "typescript": "^4.0.3"
  },
  "homepage": "https://github.com/samchon/tstl",
  "repository": {
    "type": "git",
    "url": "https://github.com/samchon/tstl"
  },
  "bugs": {
    "url": "https://github.com/samchon/tstl/issues"
  },
  "license": "MIT",
  "keywords": [
    "tstl",
    "typecript",
    "c++",
    "cpp",
    "stl",
    "standard template library",
    "algorithm",
    "container",
    "exception",
    "functional",
    "iterator",
    "numeric",
    "ranges",
    "thread",
    "utility",
    "base",
    "experimental",
    "internal",
    "Vector",
    "Deque",
    "List",
    "VectorBoolean",
    "ForwardList",
    "Stack",
    "Queue",
    "PriorityQueue",
    "FlatMap",
    "FlatMultiMap",
    "FlatMultiSet",
    "FlatSet",
    "HashMap",
    "HashMultiMap",
    "HashMultiSet",
    "HashSet",
    "TreeMap",
    "TreeMultiMap",
    "TreeMultiSet",
    "TreeSet",
    "ConditionVariable",
    "Semaphore",
    "Latch",
    "Barrier",
    "FlexBarrier",
    "Mutex",
    "TimedMutex",
    "SharedMutex",
    "SharedTimedMutex",
    "SharedLock",
    "UniqueLock"
  ]
}
